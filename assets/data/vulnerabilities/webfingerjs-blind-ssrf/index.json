{"hash":"4e4022d61baa6b4a7bb2ab2ce12f765bd783e65e","data":{"post":{"title":"Webfinger.js Blind SSRF","path":"/vulnerabilities/webfingerjs-blind-ssrf/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>This vulnerability allows a user to perform an arbitrary GET request to any Host, Port and URL.</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://www.npmjs.com/package/webfinger.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">webfinger.js</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(, 2.8.0]</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>The lookup function takes a user address for checking accounts as a feature, however, as per the <a href=\"https://www.w3.org/TR/activitypub/#security-considerations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ActivityPub spec</a>, on the security considerations section at B.3, access to Localhost services should be prevented while running in production.</p>\n<p>If the address is in the format of a user address (<strong>user@host.com</strong>), the host will be anything after the first found <strong>@</strong> symbol. Since no other test is done, an adversary may pass a specially crafted address such as <strong>user@localhost:7000/admin/restricted_page?</strong> and reach pages that would normally be out of reach.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>This PoC assumes that there is a server on the machine listening on port 3000, which receives requests for WebFinger lookups on the address <strong>/api/v1/search_user</strong>, and then calls the lookup function in webfinger.js with the user passed as an argument. For the sake of the example we assume that the server configured webfinger.js with <strong>tls_only=false</strong>.</p>\n<ol>\n<li>Activate a local HTTP server listening to port 1234 with a “secret.txt” file:</li>\n</ol>\n<p><code>python3 -m http.server 1234</code></p>\n<ol>\n<li>Run the following command:</li>\n</ol>\n<p><code>curl \"http://localhost:3000/api/v1/search_user?search=user@localhost:1234/secret.txt?\"</code></p>\n<ol>\n<li>View the console of the Python’s HTTP server and see that a request for a “<strong>secret.txt?/.well-known/webfinger?resource=acct:user@localhost:1234/secret.txt?</strong>” file was performed.</li>\n</ol>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/advisories/GHSA-8xq3-w9fx-74rv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Advisory</a></p>\n","description":"CVE-2025-54590 Medium severity. Webfinger.js Blind SSRF","date_published":"2025-07-28","xray_id":"","vul_id":"CVE-2025-54590","severity":"medium","discovered_by":"Ori Hollander","last_updated":"2025-07-28","cvss":6.9}},"context":{}}