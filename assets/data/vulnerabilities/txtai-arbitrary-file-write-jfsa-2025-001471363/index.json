{"hash":"b49894a2f3b9f12d9f7670a114bf652c88d60c61","data":{"post":{"title":"txtai arbitrary file write","path":"/vulnerabilities/txtai-arbitrary-file-write-jfsa-2025-001471363/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>Symlink Following in txtai leads to arbitrary file write when loading untrusted embedding indices</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p>txtai</p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(,9.0.0]</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>The txtai framework allows the loading of compressed tar files as embedding indices. While the validate function is intended to prevent path traversal vulnerabilities by ensuring safe filenames, it does not account for symbolic links within the tar file. An attacker is able to write a file anywhere in the filesystem when txtai is used to load untrusted embedding indices </p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>The following txtai code is vulnerable, when loading a tar file that contains symbolic links -</p>\n<pre><code class=\"language-python\">from txtai import Embeddings \nembeddings = Embeddings() \nembeddings.load(path=\"/tmp/bad_tar.tar.gz\") \n</code></pre>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/neuml/txtai/issues/965\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fix PR</a></p>\n","description":"CVE-2025-10854, HIGH, txtai arbitrary file write","date_published":"2025-09-22","xray_id":"JFSA-2025-001471363","vul_id":"CVE-2025-10854","severity":"high","discovered_by":"Ori Hollander","last_updated":"2025-09-22","cvss":8.1}},"context":{}}