{"hash":"bd8f82b8b5baa99f6802f6f60f1feeb3a79b3c89","data":{"post":{"title":"BusyBox LZMA OOB-R","path":"/vulnerabilities/busybox-lzma-oob-r-xray-189472/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>A OOB heap read in Busybox lzma leads to data leakage and denial of service when decompressing a malformed LZMA-based archive</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://busybox.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BusyBox</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>BusyBox [1.33.0, 1.33.1], fixed in 1.34.0</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>The <a href=\"https://busybox.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BusyBox</a> toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.</p>\n<p>An out-of-bounds heap read in <code>unlzma</code> leads to information leak and denial of service when crafted LZMA-compressed input is decompressed. This can be triggered by any applet/format that internally supports LZMA compression.\nAn attacker that can pass an LZMA-based archive to be decompressed, can cause data leakage and denial of service.\nNote that the following applets all accept and decompress an LZMA-based archive:\n<code>unlzma</code>, <code>tar</code>, <code>unzip</code>, <code>rpm</code>, <code>dpkg</code>, <code>man</code></p>\n<p>As shown in the <a href=\"https://jfrog.com/blog/unboxing-busybox-14-new-vulnerabilities-uncovered-by-claroty-and-jfrog/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JFrog blogpost</a>, the attack is most potent when the victim unzips a crafted zip archive, since there are no special requirements on the unzipped filename and the leaked data can be archived back into the original zip archive.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>No PoC is supplied for this issue</p>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No vulnerability mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://jfrog.com/blog/unboxing-busybox-14-new-vulnerabilities-uncovered-by-claroty-and-jfrog/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(JFrog) Unboxing BusyBox - 14 new vulnerabilities uncovered by Claroty and JFrog </a></p>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-42374\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NVD</a></p>\n","description":"CVE-2021-42374 Medium severity. A OOB heap read in Busybox lzma leads to data leakage and denial of service when decompressing a malformed LZMA-based archive","date_published":"2021-11-09","xray_id":"XRAY-189472","vul_id":"CVE-2021-42374","severity":"medium","discovered_by":"JFrog Collab","last_updated":"2021-11-09","cvss":5.3}},"context":{}}