{"hash":"d50b701c9a76d9c6c4134df3763fdbd62ce3d2ac","data":{"post":{"title":"UA .NET Standard stack exhaustion DoS","path":"/vulnerabilities/ua-net-standard-stack-dos-xray-229139/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>A stack exhaustion issue in UA .NET Standard can allow a remote attacker to perform denial of service\n​</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://github.com/OPCFoundation/UA-.NETStandard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UA .NET Standard</a>\n​</p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>UA .NET Standard (, 1.4.368.53], fixed in 1.4.368.58\n​</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p><a href=\"https://github.com/OPCFoundation/UA-.NETStandard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UA .NET Standard</a> is an implementation of an OPC UA server in C#, provided by the OPC Foundation.</p>\n<p>One of the OPC-UA requests is <a href=\"https://reference.opcfoundation.org/v104/Core/docs/Part4/5.8.4/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TranslateBrowsePathsToNodeId</a>.\nThis request provides browse paths, each of which contains a starting node and a relative path from that node to a target node.\nThe server will resolve each browse path and return a response that contains a target node id for each browse path.\nHowever, when handling that request there is a recursion in <code>MasterNodeManager.cs::TranslateBrowsePath()</code> that walks through the relative path's elements.\nProviding too many elements will make that function go beyond the maximum recursion level and crash the server due to StackOverflowException.</p>\n<p>In order to provide enough elements in the relative path the attacker doesn't necessary require a long relative path.\nEach element has a field called <code>isInverse</code> which makes the path resolver go backward instead of forward.\nSo a relative path that contains only two elements with back and forth path can also be long enough to crash the server.</p>\n<p>This issue exists only in the HTTPS endpoint and not in the TCP endpoint.\nThat is because creating enough elements requires sending a lot of data and the TCP endpoint by default limits the request's data to 64KB.\nThe HTTPS endpoint doesn't have such limit, which makes it vulnerable to this issue.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>No PoC is supplied for this issue\n​</p>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2022-29866.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UA .NET Standard advisory</a></p>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29866\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NVD</a></p>\n","description":"CVE-2022-29866 High severity. A stack exhaustion issue in UA .NET Standard can allow a remote attacker to perform denial of service","date_published":"2022-06-16","xray_id":"XRAY-229139","vul_id":"CVE-2022-29866","severity":"high","discovered_by":"Uriya Yavniely","last_updated":"2022-06-16","cvss":7.5}},"context":{}}