{"hash":"2e94a3ad0f1ee217bb813b6ff2da43de7f72acce","data":{"post":{"title":"snappy-java integer overflow in shuffle leads to DoS","path":"/vulnerabilities/snappy-java-integer-overflow-in-shuffle-leads-to-dos-xray-522076/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>snappy-java integer overflow in shuffle leads to DoS</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p>org.xerial.snappy:snappy-java</p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(,1.1.10.1)</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.</p>\n<p>The function <code>shuffle(int[] input)</code> in the file <code>BitShuffle.java</code> receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a <code>java.lang.NegativeArraySizeException</code> exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as <code>java.lang.ArrayIndexOutOfBoundsException</code>.</p>\n<p>The same issue exists also when using the <code>shuffle</code> functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.</p>\n<p>Version 1.1.10.1 contains a patch for this vulnerability.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.BitShuffle;\n\nimport java.io.*;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        int[] original = new int[0x40000000];\n        byte[] shuffled = BitShuffle.shuffle(original);\n        System.out.println(shuffled[0]);\n    }\n}\n</code></pre>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107</a></p>\n<p><a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java</a></p>\n<p><a href=\"https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905</a></p>\n<p><a href=\"https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf</a></p>\n","description":"CVE-2023-34453, MEDIUM, snappy-java integer overflow in shuffle leads to DoS","date_published":"2023-06-19","xray_id":"XRAY-522076","vul_id":"CVE-2023-34453","severity":"medium","discovered_by":"Ori Hollander","last_updated":"2023-06-19","cvss":5.9}},"context":{}}