{"hash":"917f2b9e12741bf54c2b84a152405a50928c5026","data":{"post":{"title":"Wget shorthand URLs SSRF","path":"/vulnerabilities/wget-shorthand-urls-ssrf-jfsa-2024-001063927/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>GNU Wget is vulnerable to an SSRF attack when accessing partially-user-controlled shorthand URLs</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p><a href=\"https://www.gnu.org/software/wget/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GNU Wget</a></p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(,1.24.5], Fixed in 1.25.0</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>GNU Wget is vulnerable to an SSRF attack when accessing partially-user-controlled shorthand URLs</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>Consider an application that uses Wget to access a remote resource using shorthand HTTP, and passes the userâ€™s credentials in the <code>userinfo</code> part of the URL. For example:</p>\n<p><code>wget user_input@example.com/file</code></p>\n<p>An attacker can supply the (seemingly legitimate) input <code>myuser:mypass</code>  which would result in the command line - <code>wget myuser:mypass@example.com/file</code>. This causes wget to unexpectedly issue an FTP request for the domain <code>myuser</code>, requesting the file <code>mypass@example.com/file</code>.</p>\n<p>This allows the attacker to perform an SSRF attack, since they completely control the requested host and partially control the requested path (the path suffix is usually not controlled by the attacker)</p>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>Add an explicit schema to any shorthand URLs accessed with Wget, for example replace -</p>\n<p><code>wget input@myserver</code></p>\n<p>with -</p>\n<p><code>wget https://input@myserver</code></p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://jfrog.com/blog/cve-2024-10524-wget-zero-day-vulnerability/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JFrog research blog</a></p>\n<p><a href=\"https://git.savannah.gnu.org/cgit/wget.git/commit/?id=c419542d956a2607bbce5df64b9d378a8588d778\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fix commit</a></p>\n","description":"CVE-2024-10524, MEDIUM, GNU Wget is vulnerable to an SSRF attack when accessing partially-user-controlled shorthand URLs","date_published":"2024-11-19","xray_id":"JFSA-2024-001063927","vul_id":"CVE-2024-10524","severity":"medium","discovered_by":"Goni Golan","last_updated":"2024-11-19","cvss":6.5}},"context":{}}